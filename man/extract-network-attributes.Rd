% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/net_get_.R
\name{net_get_attrs}
\alias{net_get_attrs}
\alias{net_get_attrs.igraph}
\alias{net_get_attrs.network}
\alias{net_get_attrs_df}
\alias{net_get_attr}
\alias{net_get_attr.igraph}
\alias{net_get_attr.network}
\alias{net_get_attr_names}
\alias{net_get_attr_names.igraph}
\alias{net_get_attr_names.network}
\title{Extract Global Network Attributes}
\usage{
net_get_attrs(x, ...)

\method{net_get_attrs}{igraph}(x, .default = NA)

\method{net_get_attrs}{network}(x, drop_metadata = TRUE, .default = NA)

net_get_attrs_df(x, ...)

net_get_attr(x, net_attr)

\method{net_get_attr}{igraph}(x, net_attr, .default = NA)

\method{net_get_attr}{network}(x, net_attr, .default = NA)

net_get_attr_names(x, ...)

\method{net_get_attr_names}{igraph}(x, .default = NA)

\method{net_get_attr_names}{network}(x, drop_metadata = TRUE,
  .default = NA)
}
\arguments{
\item{x}{An \code{igraph} (\code{\link[igraph:graph]{igraph::graph}}) or \code{network::network} object.}

\item{...}{Arguments passed on to other methods. See other arguments.}

\item{.default}{If returned value is empty (i.e. \code{x} has no global network attributes
or none that match the target specified by \code{net_attr}), \code{.default} is returned instead. \cr
Default: \code{NA}}

\item{drop_metadata}{\code{logical}. Whether or not to drop a \code{\link[network:network]{network::network}}'s
metadata attributes from returned object. See Details. \cr
Default: \code{TRUE}
Whether to attempt calling \code{\link[tibble:as_tibble]{tibble::as_tibble()}} in \code{vrt_get_attrs_df()}. \cr
Default: \code{TRUE}}

\item{net_attr}{\code{character}. Name of target attribute.}
}
\value{
A named \code{list}, \code{vector}, or \code{\link[tibble:tibble]{tibble::tibble}}. See Details.
}
\description{
Extract global network attributes in a variety of formats consistent across
\code{igraph} and \code{network} objects.
}
\details{
\itemize{
\item \code{drop_metadata}
\itemize{
\item \code{\link[network:network]{network::network}} objects automatically include what can be described as metadata in their
global network attributes. These metadata are:
\itemize{
\item \code{"n"} (\code{numeric}): The number of vertices in the \code{network} object.
\item \code{"directed"} (\code{logical}): Whether the \code{network} object's edges are meant to be interpreted as directed.
\item \code{"hyper"} (\code{logical}): Whether the \code{network} object is a hypergraph.
\item \code{"multiple"} (\code{logical}): Whether the \code{network} object's edges are meant to be interpreted as multiplex.
\item \code{"bipartite"} (\code{logical} \emph{or} \code{numeric}): \code{FALSE}, if the \code{network} object is not bipartite \emph{or}
the number of vertices belonging to the its "actors" mode if it is bipartite.
\item \code{"mnext"} (\code{numeric}): The index of the next edge to be added to the \code{network} object.
}
\item \code{drop_metadata} decides whether to include these in the returned object.
}
}

\itemize{
\item \code{net_get_attrs()} extracts all global network attributes as a named \code{list}.
}

\itemize{
\item \code{net_get_attrs_df()} is a convenience wrapper around \code{net_get_attrs()} that returns a
\code{tibble::tibble}.
}

\itemize{
\item \code{net_get_attr()} extracts the single global, network-level attribute specified
by \code{net_attr} and returns a scalar.
}

\itemize{
\item \code{net_get_attr_names()} extracts the names of network/graph-level attributes as
a \code{character} \code{vector}.
}
}
\examples{
library(snatools)

data("karate", package = "igraphdata")
(ig <- karate)

data("emon", package = "network")
(nw <- emon$Cheyenne)

net_get_attrs(ig)
net_get_attrs(nw, drop_metadata = FALSE)

net_get_attrs_df(ig)
net_get_attrs_df(nw, drop_metadata = FALSE)

net_get_attr(ig, "Author")

net_get_attr_names(ig)
net_get_attr_names(nw, drop_metadata = FALSE)

}
\author{
Brendan Knapp \email{brendan.g.knapp@gmail.com}
}
