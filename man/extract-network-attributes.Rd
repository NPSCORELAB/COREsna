% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/net_get_.R
\name{net_get_attrs}
\alias{net_get_attrs}
\alias{net_get_attrs.igraph}
\alias{net_get_attrs_df}
\alias{net_get_attr}
\alias{net_get_attr_names}
\alias{net_get_attr_names.igraph}
\alias{net_get_attr_names.network}
\title{Extract Graph-Level Attributes}
\usage{
net_get_attrs(x, ...)

\method{net_get_attrs}{igraph}(x)

net_get_attrs_df(x, try_tibble = TRUE, ...)

net_get_attr(x, net_attr)

net_get_attr_names(x, ...)

\method{net_get_attr_names}{igraph}(x)

\method{net_get_attr_names}{network}(x, drop_metadata = TRUE)
}
\arguments{
\item{x}{A graph object.}

\item{...}{Arguments passed on to other methods. See below.}

\item{try_tibble}{\code{logical}.
Whether to attempt calling \code{\link[tibble:as_tibble]{tibble::as_tibble()}} in \code{vrt_get_attrs_df()}. \cr
Default: \code{TRUE}}

\item{net_attr}{\code{character}. Name of target attribute.}

\item{drop_metadata}{\code{logical}. Whether or not to drop metadata attributes from
returned object. See Details. \cr
Default: \code{FALSE}
\code{\link[network:network]{network::network}} objects include what can be
described as "metadata" in their graph-level attributes.}
}
\value{
A named \code{list}, \code{vector}, \code{data.frame}, or \code{\link[tibble:tibble]{tibble::tibble}}. See Details.
}
\description{
Extract Graph-Level Attributes
}
\details{
\code{drop_metadata}
\itemize{
\item \code{\link[network:network]{network::network}} object include what can be described as metadata in their
network/graph-level attributes. These metadata include: \cr
+\code{"n"}: The number of vertices in the \code{network} object.
\itemize{
\item \code{"directed"}: Whether the \code{network} object is directed.
\item \code{"hyper"}: Whether the \code{network} object is a hypergraph.
\item \code{"multiple"}: Whether the \code{network} object is multiplex.
\item \code{"bipartite"}: Whether the \code{network} object is bipartite.
\item \code{"mnext"}: The index of the next edge to be added to the \code{network} object. \cr
}
\item \code{drop_metadata} determines whether or not to include these in the returned object.
}

\code{net_get_attrs()} extracts all vertex attributes as a named list.

\itemize{
\item \code{net_get_attrs_df} is a convenience wrapper around \code{net_get_attrs()} that returns a
\code{data.frame}.
\itemize{
\item \code{stringsAsFactors} is \emph{always} \code{FALSE}.
\item If available, \code{\link[tibble:as_tibble]{tibble::as_tibble()}} is called to return a \code{tbl_df} instead.
}
}

\code{net_get_attr()} extracts the single network/graph-level attribute specified
by \code{net_attr} and returns a scalar.

\code{net_get_attr_names()} extracts the names of network/graph-level attributes as
a \code{character} \code{vector}.
}
\examples{
library(snatools)

data("karate", package = "igraphdata")
(ig <- karate)

data("emon", package = "network")
(nw <- emon$Cheyenne)

net_get_attr_names(ig)
net_get_attr_names(nw, drop_metadata = FALSE)

net_get_attrs(ig)
net_get_attrs(nw, drop_metadata = FALSE)

net_get_attrs_df(ig)
net_get_attrs_df(nw, drop_metadata = FALSE)

net_get_attr(ig, "Author")

}
\seealso{
\code{\link[igraph:graph_attr]{igraph::graph_attr()}}, \code{\link[igraph:graph_attr_names]{igraph::graph_attr_names()}},
\code{\link[network:get.network.attribute]{network::get.network.attribute()}}, \code{\link[network:list.network.attributes]{network::list.network.attributes()}}
}
\author{
Brendan Knapp \email{brendan.g.knapp@gmail.com}
}
