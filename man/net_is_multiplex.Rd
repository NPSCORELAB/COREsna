% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network-metadata.R
\name{net_is_multiplex}
\alias{net_is_multiplex}
\alias{net_is_multiplex.bridge_net}
\alias{net_is_multiplex.igraph}
\alias{net_is_multiplex.network}
\alias{net_is_multiplex.tbl_graph}
\alias{net_is_multiplex.edgelist}
\title{Is a graph object multiplex?}
\usage{
net_is_multiplex(x)

\method{net_is_multiplex}{bridge_net}(x)

\method{net_is_multiplex}{igraph}(x)

\method{net_is_multiplex}{network}(x)

\method{net_is_multiplex}{tbl_graph}(x)

\method{net_is_multiplex}{edgelist}(x)
}
\arguments{
\item{x}{An \code{bridge_net}, \code{igraph}, \code{network}, \code{tbl_graph}, or \code{edgelist} object.}
}
\value{
\code{logical} indicating whether \code{x} is multiplex (It contains parallel edges).
}
\description{
Is a graph object multiplex?
}
\details{
\code{net_is_multiplex()} determines that edges are parallel as follows: \cr
\itemize{
\item If \code{x} is directed, edges are parallel if they share the same source vertex (\code{.ego})
and same target vertex (\code{.alter})
\item If \code{x} is undirected, edges are parallel if they share the same dyad, regardless of
which vertex is stored as \code{.ego} or \code{.alter}.
}
}
\examples{
library(snatools)

ig <- c(1, 2,
        2, 3,
        1, 3,
        4, 1,
        1, 4) \%>\% 
 matrix(ncol = 2, byrow = TRUE) \%>\% 
 igraph::graph_from_edgelist(directed = FALSE)

nw <- ig \%>\% 
  as_network()
  
bridge_g <- ig \%>\% 
  as_bridge_net()
  
tidy_g <- ig \%>\% 
  tidygraph::as_tbl_graph()

net_is_multiplex(bridge_g)

net_is_multiplex(ig)

net_is_multiplex(nw)

net_is_multiplex(tidy_g)

ig \%>\% 
  rep_as_edgelist(use_names = FALSE) \%>\% 
  net_is_multiplex()

ig \%>\% 
  rep_as_edgelist(use_names = FALSE, weights = TRUE) \%>\% 
  net_is_multiplex()

}
\seealso{
\code{\link[igraph:any_multiple]{igraph::any_multiple()}}

\code{\link[network:is.multiplex]{network::is.multiplex()}}
}
\author{
Brendan Knapp \email{brendan.g.knapp@gmail.com}
}
