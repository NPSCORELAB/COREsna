% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/txt_.R
\name{txt_}
\alias{txt_}
\alias{txt_detect}
\alias{txt_extract}
\alias{txt_extract_all}
\alias{txt_replace}
\alias{txt_replace_all}
\alias{txt_remove}
\alias{txt_remove_all}
\alias{txt_split}
\alias{txt_trim}
\alias{txt_squish}
\alias{txt_to_lower}
\alias{txt_to_upper}
\alias{txt_sub}
\alias{txt_subset}
\alias{txt_which}
\alias{txt_to_title}
\title{Text manipulation tools.}
\usage{
txt_detect(text, pattern, ignore_case = FALSE, ...)

txt_extract(text, pattern, ignore_case = FALSE, ...)

txt_extract_all(text, pattern, ignore_case = FALSE, ...)

txt_replace(text, pattern, replacement, ignore_case = FALSE, ...)

txt_replace_all(text, pattern, replacement, ignore_case = FALSE, ...)

txt_remove(text, pattern, ignore_case = FALSE, ...)

txt_remove_all(text, pattern, ignore_case = FALSE, ...)

txt_split(text, pattern, ...)

txt_trim(text, ...)

txt_squish(text, ...)

txt_to_lower(text)

txt_to_upper(text)

txt_sub(text, start = 1L, end = nchar(text))

txt_subset(text, pattern, ...)

txt_which(text, pattern, ...)

txt_to_title(text)
}
\arguments{
\item{text}{\code{character}. Object to target.}

\item{pattern}{\code{character}. Regular expression for matches.}

\item{ignore_case}{\code{logical}. Whether case matching should be strict.}

\item{...}{Additional arguments to be passed to or from \code{{base}} methods listed in
\href{#see-also}{\strong{See Also}}.}

\item{replacement}{\code{character}. Object to replace matched \code{pattern}.}

\item{start}{\code{integer}. Position of first character.}

\item{end}{\code{integer}. Position of last character.}
}
\description{
The \code{txt_} family includes internal functions that are exported for convenience.
They are simply wrappers around \code{{base}} R \code{character}-related methods
that use a syntax inspired by \link[stringi:stringi]{stringi::stringi}/\link[stringr:stringr]{stringr::stringr}.
}
\seealso{
\code{\link[base:grep]{base::grep()}}, \code{\link[base:grepl]{base::grepl()}}, \code{\link[base:regexpr]{base::regexpr()}},
\code{\link[base:regmatches]{base::regmatches()}}, \code{\link[base:sub]{base::sub()}}, \code{\link[base:gsub]{base::gsub()}}, \code{\link[base:substring]{base::substring()}},
\code{\link[base:strsplit]{base::strsplit()}}
}
